I"c<p>We’ve just pushed the latest version of <a href="https://github.com/jts/nanopolish">nanopolish</a> to github. This version has been long in development and has many changes:</p>

<ul>
  <li>First official release of the methylation caller in the new <code class="highlighter-rouge">nanopolish call-methylation</code> module. See <a href="https://github.com/jts/nanopolish#calling-methylation">here</a> for a description of how to run it</li>
  <li>Streamlined workflow for consensus and variant calling (<code class="highlighter-rouge">nanopolish eventalign</code> no longer needs to be run)</li>
  <li>You no longer need to provide the pore models files using the <code class="highlighter-rouge">--models</code> argument. These are now compiled into the nanopolish binary, including the methylation models for R7.3, R9 and R9.4</li>
  <li>Initial support for FAST5 files generated by the Albacore basecaller</li>
  <li>A new experimental module, <code class="highlighter-rouge">nanopolish phase-reads</code>, which calculates the set of variants each read supports from a provided VCF file. The output is a BAM file that can be used for phasing or clustering samples (more on this soon). Here’s a screenshot of the output:</li>
</ul>

<p><img src="/assets/nanopolish-0.6/phasing.png" alt="phasing example" class="img-responsive" /></p>

<h2 id="known-issues">Known Issues</h2>

<p>The methylation caller is fairly lightweight as it only runs our expensive hidden Markov model at genomic CpG dinucleotides. The bottleneck in methylation detection currently is loading and parsing the signal-level information from the FAST5 files, not running the model. We’re working on optimizing this process.</p>

<p>If you have any comments or issues with this release please let us know in the comments here, on twitter or on <a href="https://github.com/jts/nanopolish/issues">github</a>.</p>
:ET